#!/usr/bin/env bash

# Error handling
# TODO: Look into best practices with these things
set -e  # Quit script with last error code when a command fails
set -o pipefail  # Fail pipe when it finishes if a command within it failed
set -u  # Fail when a command uses an unbound variable

# Set directory variables
dotfiles_dir="$HOME/docs/cs/headless-ubuntu-dotfiles"
bashrc_dir="$dotfiles_dir/home/.config/bashrc"

# Create directories
mkdir_cs="mkdir $HOME/docs/cs"
mkdir_programs="mkdir $HOME/docs/programs"
mkdir_config="mkdir $HOME/.config"

# Startup message
echo Running install script for headless-ubuntu-dotfiles

# Check for --dry-run
dry_run=false
for arg in "$@"; do
    if [ "$arg" = "--dry-run" ]; then
        dry_run=true
        echo "dry_run=true"
    else
        echo An invalid argument was provided. Only --dry-run is available. Quitting.
        exit 1
    fi
done
echo

# Install packages
apt_packages="git git-lfs git-delta pandoc exuberant-ctags gdb"
snap_packages="glow gh"

## Apt packages
echo Installing apt packages
for pkg in $apt_packages; do
    cmd="sudo apt install $pkg"
    echo "$cmd"
    if [ $dry_run = false ]; then
        eval $cmd
    fi
done
echo

## Snap packages
echo Installing snap packages
for pkg in $snap_packages; do
    cmd="sudo snap install $pkg"
    echo "$cmd"
    if [ $dry_run = false ]; then
        eval $cmd
    fi
done
echo

## TMUX Plugin Manager
echo Installing TMUX Package Manager
tmux_plugin_manager_cmd="git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"
echo "$tmux_plugin_manager_cmd"
if [ $dry_run = false ]; then
    eval "$tmux_plugin_manager_cmd"
fi
echo

# Custom bashrc
bashrc_cmd="echo source $bashrc_dir/* >> $HOME/.bashrc"
echo Telling $HOME/.bashrc to source custom bash scripts
echo "$bashrc_cmd"
if [ $dry_run = false ]; then
    eval $bashrc_cmd
fi
echo

# Symlinks
echo Creating symlinks

## .gitconfig
gitconfig_cmd="ln -svi $dotfiles_dir/home/.gitconfig $HOME/.gitconfig"
echo "$gitconfig_cmd"
if [ $dry_run = false ]; then
    eval $gitconfig_cmd
fi

## .gitconfig themes
gitconfig_themes_cmd="ln -svi $dotfiles_dir/home/themes.gitconfig $HOME/themes.gitconfig"
echo "$gitconfig_themes_cmd"
if [ $dry_run = false ]; then
    eval $gitconfig_themes_cmd
fi

## TMUX
tmux_cmd="ln -svi $dotfiles_dir/home/.tmux.conf $HOME/.tmux.conf"
echo "$tmux_cmd"
if [ $dry_run = false ]; then
    eval $tmux_cmd
fi

## Vim
vimrc_cmd="ln -svi $dotfiles_dir/home/.vimrc $HOME/.vimrc"
echo "$vimrc_cmd"
if [ $dry_run = false ]; then
    eval $vimrc_cmd
fi
echo

# Finishing message
echo Install script finished
if [ $dry_run = true ]; then
    echo "dry_run=true"
fi
